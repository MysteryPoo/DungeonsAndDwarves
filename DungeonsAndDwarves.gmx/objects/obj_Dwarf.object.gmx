<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_Dwarf_Idle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_Entity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Special Properties
image_speed = 0.3;
Weapon = instance_create( x, y, obj_Bow );
Weapon.Parent = id;
MovingWhereFacing = true;
WeaponInUse = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>604</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_inherited</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement Modifiers
var _Min_Arc_X = x + 32 * dcos( image_angle - 45 );
var _Min_Arc_Y = y - 32 * dsin( image_angle - 45 );
var _Max_Arc_X = x + 32 * dcos( image_angle + 45 );
var _Max_Arc_Y = y - 32 * dsin( image_angle + 45 );
var _Max_Dist = point_distance( _Min_Arc_X, _Min_Arc_Y, _Max_Arc_X, _Max_Arc_Y );
var _Direction_X = x + 32 * dcos( direction );
var _Direction_Y = y - 32 * dsin( direction );
if( point_distance( _Min_Arc_X, _Min_Arc_Y, _Direction_X, _Direction_Y ) &lt; _Max_Dist
        &amp;&amp; point_distance( _Max_Arc_X, _Max_Arc_Y, _Direction_X, _Direction_Y ) &lt; _Max_Dist )
    MovingWhereFacing = true;
else
    MovingWhereFacing = false;
if( instance_exists( Weapon ) ) {
    if( Weapon.Active )
        WeaponInUse = true;
    else
        WeaponInUse = false;
}
/// Animation State
if( speed == 0 )
    sprite_index = spr_Dwarf_Idle;
else
    sprite_index = spr_Dwarf_Walk;
        

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// User Input
if( keyboard_check_pressed( ord("1") ) ) {
    with( Weapon )
        instance_destroy();
    Weapon = instance_create( x, y, obj_Sword );
    Weapon.Parent = id;
}
if( keyboard_check_pressed( ord("2") ) ) {
    with( Weapon )
        instance_destroy();
    Weapon = instance_create( x, y, obj_Bow );
    Weapon.Parent = id;
}
if( instance_exists( Weapon ) ) {
    if( global.RightStick.Distance )
        Weapon.Active = true;
    else
        Weapon.Active = false;
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Movement
var _Speed = MaxSpeed;
if( !MovingWhereFacing )
    _Speed *= 0.5;
if( WeaponInUse )
    _Speed *= 0.5;
if( CONTROLS == "GAMEPAD" || CONTROLS == "VIRTUAL" ) {
    if( global.RightStick.Distance ) {
        image_angle = global.RightStick.Angle;
        WeaponAngle = image_angle;
    } else
        image_angle = global.LeftStick.Angle;
}
else if( CONTROLS == "PC" )
    image_angle = point_direction( x, y, mouse_x, mouse_y );
if( global.LeftStick.Distance &gt; 0 ) {
    direction = global.LeftStick.Angle;
    speed = _Speed;
} else {
    speed = 0;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
